<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.openpnp</groupId>
	<artifactId>openpnp-capture-java</artifactId>
	<version>0.0.18</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
		</license>
	</licenses>

	<name>OpenPnP Capture Java Bindings</name>
	<description>OpenPnP Capture Java with all binaries included, packaged for Maven.</description>
	<url>http://github.com/openpnp/openpnp-capture-java</url>

	<scm>
		<url>https://github.com/openpnp/openpnp-capture</url>
		<connection>scm:git:http://github.com/openpnp/openpnp-capture.git</connection>
		<developerConnection>scm:git:http://github.com/openpnp/openpnp-capture.git</developerConnection>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>http://github.com/openpnp/opencv/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<id>vonnieda</id>
			<name>Jason von Nieda</name>
			<email>jason@vonnieda.org</email>
			<organization>OpenPnP</organization>
			<organizationUrl>http://openpnp.org</organizationUrl>
			<roles>
				<role>maintainer</role>
			</roles>
		</developer>
	</developers>

	<build>
		<resources>
			<resource>
				<directory>openpnp-capture/binaries</directory>
			</resource>
		</resources>
		<plugins>
			<!-- Specify source version levels and main class. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<mainClass>org.openpnp.capture.OpenPnpCapture</mainClass>
					<excludes>
					</excludes>
				</configuration>
			</plugin>

			<!-- Generates binding using Jnaerator -->
			<plugin>
				<groupId>com.nativelibs4java</groupId>
				<artifactId>maven-jnaerator-plugin</artifactId>
				<version>0.12</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Adds target/generated-sources to the source directory list so it 
				will be automatically added in Eclipse -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/java/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Creates a shaded "uber" jar that contains the entire library. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.openpnp.capture.OpenPnpCapture</mainClass>
								</transformer>
							</transformers>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>shaded</shadedClassifierName>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Specifies the file encoding to be used when copying resources. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- Checks source code for common format violations and stops the build 
				if any are found. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.29</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<checkstyleRules>
								<module name="Checker">
									<module name="TreeWalker">
										<module name="NeedBraces">
										</module>
										<module name="OneStatementPerLine">
										</module>
										<module name="MemberName">
											<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
										</module>
										<module name="TypeName">
											<property name="format" value="^[A-Z][a-zA-Z0-9_]*$" />
										</module>
										<module name="MethodName">
										</module>
										<module name="LocalVariableName">
											<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
										</module>
									</module>
								</module>
							</checkstyleRules>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Include sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Include JavaDocs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Allows simple deployment to Central with mvn clean deploy -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<!-- Signs artifacts before deployment -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.17,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.nativelibs4java
										</groupId>
										<artifactId>
											maven-jnaerator-plugin
										</artifactId>
										<versionRange>
											[0.12,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>com.nativelibs4java</groupId>
			<artifactId>jnaerator-runtime</artifactId>
			<version>0.12</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>